const axios = require("axios");
const FormData = require("form-data");
const fs = require("fs");
require("dotenv").config();

const TelegramSubscriber = require("./models/TelegramSubscriber"); // ‚Üê –º–æ–¥–µ–ª—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const ADMIN_CHAT = process.env.TELEGRAM_CHAT_ID || null;

if (!BOT_TOKEN) {
  console.warn("‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env");
}

/**
 * –°–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π:
 *  - ADMIN_CHAT –∏–∑ .env (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω)
 *  - –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –∏–∑ –ë–î
 *  - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ chatId, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤—ã–∑–æ–≤–æ–º
 */
async function getRecipients(extraChatIds = []) {
  const set = new Set();

  if (ADMIN_CHAT) set.add(String(ADMIN_CHAT));

  try {
    const subs = await TelegramSubscriber.findAll({ where: { isActive: true } });
    subs.forEach((s) => s.chatId && set.add(String(s.chatId)));
  } catch (e) {
    console.error("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:", e.message);
  }

  (extraChatIds || []).forEach((id) => id && set.add(String(id)));

  return Array.from(set);
}

async function sendText(chatId, text) {
  try {
    await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      chat_id: chatId,
      text,
      parse_mode: "Markdown",
      disable_web_page_preview: true,
    });
  } catch (e) {
    console.error(`‚ùå sendMessage(${chatId}) error:`, e.response?.data || e.message);
  }
}

async function sendPhoto(chatId, fileOrId, filename) {
  try {
    // –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ file_id ‚Äî –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∫ photo: file_id
    if (typeof fileOrId === "string" && !Buffer.isBuffer(fileOrId)) {
      await axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendPhoto`, {
        chat_id: chatId,
        photo: fileOrId,
      });
      return null;
    }

    // –∏–Ω–∞—á–µ ‚Äî –±—É—Ñ–µ—Ä
    const form = new FormData();
    form.append("chat_id", chatId);
    form.append("photo", fileOrId, { filename: filename || "photo.jpg" });

    const resp = await axios.post(
      `https://api.telegram.org/bot${BOT_TOKEN}/sendPhoto`,
      form,
      { headers: form.getHeaders() }
    );

    // –í–µ—Ä–Ω—ë–º file_id ‚Äî –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
    const photos = resp?.data?.result?.photo || [];
    const best = photos[photos.length - 1];
    return best?.file_id || null;
  } catch (e) {
    console.error(`‚ùå sendPhoto(${chatId}) error:`, e.response?.data || e.message);
    return null;
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–∫–∞–∑ –≤ Telegram (—Ç–µ–∫—Å—Ç + –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è) –º–Ω–æ–∂–µ—Å—Ç–≤—É –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
 * @param {Object} order
 * @param {Object} [opts]
 * @param {string[]} [opts.extraChatIds] ‚Äî –¥–æ–ø. chatId –∞–¥—Ä–µ—Å–∞—Ç–æ–≤
 * @param {boolean}  [opts.includeAdmin=true] ‚Äî —Å–ª–∞—Ç—å –ª–∏ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç –∏–∑ .env
 */
const sendOrderToTelegram = async (order, opts = {}) => {
  const { extraChatIds = [], includeAdmin = true } = opts;

  // 1) —Ç–µ–∫—Å—Ç
  const message =
    `üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*\n\n` +
    `üìÖ –î–∞—Ç–∞: ${new Date(order.orderDate).toLocaleString("ru-RU")}\n` +
    `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}\n` +
    `üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${order.fullName || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}\n` +
    `üõçÔ∏è –ò–∑–¥–µ–ª–∏–µ: ${order.productType || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}, ${order.color || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}, ${order.size || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}\n` +
    `üé® –í—ã—à–∏–≤–∫–∞: ${order.embroideryType || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}\n` +
    `üî§ –¢–µ–∫—Å—Ç: ${order.customText || "-"}\n` +
    `üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${order.comment || "–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"}\n` +
    `üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${order.deliveryAddress || "–ù–µ —É–∫–∞–∑–∞–Ω"}\n` +
    `üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: ${order.totalPrice || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}\n`;

  // 2) —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
  const recipients = await getRecipients(includeAdmin ? extraChatIds : extraChatIds.filter(() => true));
  if (!includeAdmin && ADMIN_CHAT) {
    // –µ—Å–ª–∏ –≤—ã–∫–ª—é—á–∏–ª–∏ –∞–¥–º–∏–Ω-—á–∞—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏–º –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞ (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ getRecipients –µ–≥–æ –¥–æ–±–∞–≤–∏–ª)
    const idx = recipients.indexOf(String(ADMIN_CHAT));
    if (idx >= 0) recipients.splice(idx, 1);
  }

  if (!recipients.length) {
    console.warn("‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞");
    return;
  }

  // 3) –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º —Ñ–æ—Ç–æ –≤ –±—É—Ñ–µ—Ä—ã –æ–¥–∏–Ω —Ä–∞–∑
  const photos = [];
  if (order.images && Array.isArray(order.images)) {
    for (const image of order.images) {
      try {
        const buffer = fs.readFileSync(image.path);
        const filename = image.originalname || image.filename || "image.jpg";
        photos.push({ buffer, filename, _path: image.path });
      } catch (e) {
        console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª:", image.path, e.message);
      }
    }
  }

  // 4) –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º
  //    —á—Ç–æ–±—ã –Ω–µ —É–ø–∞—Å—Ç—å –ø–æ rate-limit, –∏–¥—ë–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
  //    –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ç–æ –ø–µ—Ä–≤–æ–º—É ‚Äî –ø–æ–ª—É—á–∏–ª–∏ file_id ‚Äî –∏ –¥–∞–ª—å—à–µ —à–ª—ë–º –ø–æ file_id
  for (const chatId of recipients) {
    await sendText(chatId, message);

    // —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –±—ã–ª–∏)
    let cachedFileIds = []; // –∑–∞–ø–æ–º–Ω–∏–º file_id –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏
    for (let i = 0; i < photos.length; i++) {
      const p = photos[i];

      // –µ—Å–ª–∏ file_id —É–∂–µ –µ—Å—Ç—å ‚Äî —à–ª—ë–º –µ–≥–æ
      if (cachedFileIds[i]) {
        await sendPhoto(chatId, cachedFileIds[i]);
        continue;
      }

      // –∏–Ω–∞—á–µ ‚Äî —à–ª—ë–º –±—É—Ñ–µ—Ä –∏ –∑–∞–±–∏—Ä–∞–µ–º file_id
      const fileId = await sendPhoto(chatId, p.buffer, p.filename);
      if (fileId) cachedFileIds[i] = fileId;
    }
  }

  // 5) —É–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –û–î–ò–ù —Ä–∞–∑, –ø–æ—Å–ª–µ —Ä–∞—Å—Å—ã–ª–∫–∏
  for (const p of photos) {
    if (p._path) {
      fs.unlink(p._path, (err) => {
        if (err) console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:", p._path);
        else console.log("üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª—ë–Ω:", p._path);
      });
    }
  }
};

module.exports = sendOrderToTelegram;
