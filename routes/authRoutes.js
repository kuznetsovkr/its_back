const express = require("express");
const jwt = require("jsonwebtoken");
const User = require("../models/User");
require("dotenv").config();

const router = express.Router();
const smsCodes = new Map(); // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ–¥–æ–≤

const ADMIN_PHONE = process.env.ADMIN_PHONE;
const ADMIN_PASSWORD = process.env.ADMIN_PASSWORD; 

const normalizePhone = (phone) => {
    if (!phone) {
        console.error("üö® –û—à–∏–±–∫–∞: normalizePhone –ø–æ–ª—É—á–∏–ª undefined!");
        return "";
    }
    return phone.replace(/\D/g, "");
};

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –∏ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å (–ù–û –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∞–¥–º–∏–Ω!)
router.post("/request-sms", async (req, res) => {
    console.log("üì© –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ /request-sms, —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:", req.body);

    if (!req.body || !req.body.phone) {
        console.error("üö® –û—à–∏–±–∫–∞: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ `req.body`!");
        return res.status(400).json({ message: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" });
    }

    const phone = req.body.phone;
    const normalizedPhone = normalizePhone(phone);
    console.log(`üìû –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: ${normalizedPhone}`);

    const normalizedAdminPhone = normalizePhone(ADMIN_PHONE || "");

    if (normalizedPhone === normalizedAdminPhone) {
        return res.json({ message: "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" });
    }

    const smsCode = Math.floor(100000 + Math.random() * 900000);
    smsCodes.set(normalizedPhone, smsCode);

    console.log(`üìû –°–ú–°-–∫–æ–¥ –¥–ª—è ${normalizedPhone}: ${smsCode}`);

    return res.json({ message: "–ö–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ –≤—ã–≤–µ–¥–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª—å" });
});

//  –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ SMS-–∫–æ–¥—É
router.post("/login", async (req, res) => {
    try {
        const { phone, smsCode } = req.body;
        if (!phone || !smsCode) return res.status(400).json({ message: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏ –∫–æ–¥" });

        const normalizedPhone = normalizePhone(phone); // –ü—Ä–∏–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –≤–∏–¥—É
        console.log(`üìû –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥ –ø–æ SMS. –í–≤–µ–¥—ë–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: ${normalizedPhone}`);

        const validCode = smsCodes.get(normalizedPhone);
        console.log(`üîç –ù–∞–π–¥–µ–Ω–Ω—ã–π –∫–æ–¥ –≤ smsCodes: ${validCode}`);

        if (!validCode || validCode != smsCode) {
            return res.status(400).json({ message: "–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥" });
        }

        smsCodes.delete(normalizedPhone); // –£–¥–∞–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥

        //  –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –≤ –±–∞–∑—É
        console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–º–µ—Ä–æ–º: ${normalizedPhone}`);

        let user = await User.findOne({ where: { phone: normalizedPhone } });

        if (!user) {
            console.log("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ...");
            user = await User.create({ phone: normalizedPhone });
        }

        console.log(" –ù–∞–π–¥–µ–Ω / —Å–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", user);

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JWT-—Ç–æ–∫–µ–Ω
        const token = jwt.sign({ id: user.id }, process.env.JWT_SECRET, { expiresIn: "24h" });

        return res.json({ token, user });
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error);
        return res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏" });
    }
});


router.post("/admin-login", async (req, res) => {
    const { phone, password } = req.body;

    if (normalizePhone(phone) !== normalizePhone(ADMIN_PHONE)) {
        return res.status(403).json({ message: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞" });
    }

    if (password !== ADMIN_PASSWORD) {
        return res.status(401).json({ message: "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å" });
    }

    const token = jwt.sign({ phone, role: "admin" }, process.env.JWT_SECRET, { expiresIn: "24h" });

    res.json({ token });
});

module.exports = router;
